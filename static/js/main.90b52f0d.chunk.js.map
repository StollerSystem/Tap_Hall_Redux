{"version":3,"sources":["components/img/ClipartKey_1391822B.png","components/img/VikingMammen2.png","components/img/VikingMammen1.png","components/Header.js","components/Keg.js","components/TapList.js","components/ReusableForm.js","components/NewKegForm.js","components/KegDetails.js","components/EditKegForm.js","components/TapControl.js","actions/index.js","actions/ActionTypes.js","components/App.js","reportWebVitals.js","reducers/index.js","reducers/tap-list-reducer.js","reducers/form-visible-reducer.js","reducers/selected-keg-reducer.js","reducers/editing-reducer.js","index.js"],"names":["module","exports","Header","Fragment","className","src","require","alt","Keg","props","alert","quantity","brand","name","alcoholContent","price","onClick","onPourPint","id","onKegSelection","TapList","availableKegs","map","keg","key","NewProductForm","onSubmit","formSubmissionHandler","type","placeholder","required","min","step","max","buttonText","ReusableForm","event","preventDefault","parseInt","target","value","toFixed","onNewKegCreation","v4","KegDetail","onClickingDelete","onClickingEdit","EditKegForm","onEditProduct","htmlFor","defaultValue","TapControl","handleClickForm","dispatch","selectedKeg","handleAddingNewKegToList","newKeg","a","handleChangingSelectedKeg","tapList","masterTapList","handlePourPint","forceUpdate","handleEditClick","handleEditingKegInList","kegToEdit","handleDeletingKeg","currentVisibleState","this","editing","formVisibleOnPage","NewKegForm","React","Component","connect","state","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","concat","newState","filter","Tap","newState2","toString","editedMasterTapList","newSelectedKeg","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90b52f0d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ClipartKey_1391822B.0d992982.png\";","module.exports = __webpack_public_path__ + \"static/media/VikingMammen2.55ffd52f.png\";","module.exports = __webpack_public_path__ + \"static/media/VikingMammen1.7bc105e1.png\";","import React from \"react\";\r\n\r\nfunction Header() {\r\n  return (    \r\n    <React.Fragment>\r\n      <br/><br/>\r\n      <div className=\"container header hero-image\">\r\n        {/* <img src={ship}/> */}\r\n        <img src={require('./img/ClipartKey_1391822B.png')} alt=\"ship\" />\r\n        <h1>VIKING SHIP TAP HALL</h1>\r\n        <p>(Wimps and Posers: leave the hall)</p>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction Keg(props){\r\n\r\n  let alert = null\r\n  if (props.quantity <= 0) {\r\n    alert = <span className=\"redAlert\"><em>Out of stock</em></span>\r\n  } else if (props.quantity <= 10) {\r\n    alert = <span className=\"redAlert\"><em>Almost Empty</em></span>\r\n  }\r\n\r\n  return (    \r\n    <div className=\"keg\">          \r\n      <h4>{props.brand} - {props.name} - {props.alcoholContent}%ALC - <span className=\"green\">${props.price}/Pint</span>  {alert}</h4>          \r\n      <p>Quantity (approx pints left): <span className=\"redAlert\">{props.quantity}</span></p>        \r\n      <button className=\"btn btn-outline-info btn-sm\" onClick = {() => props.onPourPint(props.id)}>Pour a pint!</button>\r\n      <button className=\"btn btn-outline-info btn-sm\" onClick = {() => props.onKegSelection(props.id)}>Details</button>\r\n    </div>    \r\n  )\r\n}\r\n\r\nKeg.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  brand: PropTypes.string.isRequired,\r\n  price: PropTypes.string.isRequired,\r\n  alcoholContent: PropTypes.string.isRequired,\r\n  quantity: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onKegSelection: PropTypes.func,\r\n  onPourPint: PropTypes.func\r\n}\r\n\r\nexport default Keg;","import React from \"react\";\r\nimport Keg from \"./Keg.js\"\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nfunction TapList(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <h2 className=\"tapList\">- Tap List -</h2>\r\n      <hr/>      \r\n      {props.availableKegs.map((keg) =>\r\n        <Keg\r\n        name={keg.name}\r\n        brand={keg.brand}\r\n        price={keg.price}\r\n        alcoholContent={keg.alcoholContent}\r\n        quantity={keg.quantity}\r\n        id={keg.id}\r\n        key={keg.id}\r\n        onKegSelection={props.onKegSelection}\r\n        onPourPint={props.onPourPint}/>\r\n      )}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nTapList.propTypes = {\r\n  availableKegs: PropTypes.array,\r\n  onKegSelection: PropTypes.func,\r\n  onPoutPint: PropTypes.func  \r\n};\r\n\r\nexport default TapList;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction NewProductForm(props) {\r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={props.formSubmissionHandler}>\r\n        <div className=\"form-group\">\r\n          <input\r\n          className=\"form-control\"\r\n            type='text'\r\n            name='name'\r\n            placeholder='Name' required /><br/>\r\n          <input\r\n          className=\"form-control\"\r\n            type='text'\r\n            name='brand'\r\n            placeholder='Brand' required /><br/>\r\n          <input\r\n          className=\"form-control\"\r\n            type=\"number\"\r\n            name='price'\r\n            placeholder='Price' min=\"0.01\" step=\"0.01\" required /><br/>\r\n          <input\r\n          className=\"form-control\"\r\n            type=\"number\"\r\n            name='alcoholContent'\r\n            placeholder='Alcohol Content' min=\"0.01\" max=\"15.00\" step=\"0.01\" required/><br/>\r\n          <input\r\n          className=\"form-control\"\r\n            type=\"number\"\r\n            name='quantity'\r\n            placeholder='Quantity (full keg = 124)' min=\"1\" step=\"1\" max=\"124\" required/><br/>\r\n          <button className=\"btn btn-outline-danger btn-block\" type='submit'>{props.buttonText}</button>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nNewProductForm.propTypes = {\r\n  formSubmissionHandler: PropTypes.func,\r\n  buttonText: PropTypes.string\r\n};\r\n\r\nexport default NewProductForm;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 } from 'uuid';\r\nimport ReusableForm from \"./ReusableForm\";\r\n\r\n\r\nfunction NewProductForm(props) {\r\n\r\n  function handleNewProductFormSubmission(event){\r\n    event.preventDefault();    \r\n    const price = parseInt(event.target.price.value).toFixed(2);\r\n    props.onNewKegCreation({name: event.target.name.value, brand: event.target.brand.value, price: price, alcoholContent: event.target.alcoholContent.value, quantity: event.target.quantity.value, id: v4() })  }  \r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <ReusableForm\r\n      formSubmissionHandler={handleNewProductFormSubmission}\r\n      buttonText=\"Add Keg\"/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nNewProductForm.propTypes = {\r\n  onNewProductCreation: PropTypes.func,\r\n  onNewKegCreation: PropTypes.func\r\n};\r\n\r\nexport default NewProductForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction KegDetail(props){\r\n  const { keg, onClickingDelete} = props;  \r\n  \r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"keg\">\r\n        <h1 className=\"black\">Keg Details</h1>\r\n        <hr/>\r\n        <h2>Name: {keg.name}</h2>\r\n        <h4>Brand: {keg.brand}</h4>\r\n        <h4>Price/Pint: ${keg.price}</h4>\r\n        <h4>Alcohol Content: {keg.alcoholContent} %ABU</h4>\r\n        <h4>Quantity (approx pint pours left): {keg.quantity}</h4>\r\n        <hr/>\r\n        <button className=\"btn btn-outline-info btn-block\" onClick={ props.onClickingEdit }>Edit This Keg</button>\r\n        <button className=\"btn btn-outline-danger btn-block\" onClick={() => onClickingDelete(keg.id) }>Delete This Keg</button>\r\n      </div>\r\n      <hr/>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nKegDetail.propTypes = {\r\n  keg: PropTypes.object,\r\n  onClickingEdit: PropTypes.func,\r\n  onClickingDelete: PropTypes.func\r\n}\r\n\r\nexport default KegDetail;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 } from \"uuid\";\r\n\r\nfunction EditKegForm(props) {\r\n\r\n  function handleEditKegFormSubmission(event) {\r\n    event.preventDefault();\r\n    props.onEditProduct({\r\n      name: event.target.name.value,\r\n      brand: event.target.brand.value,\r\n      price: event.target.price.value,\r\n      alcoholContent: event.target.alcoholContent.value,\r\n      quantity: event.target.quantity.value,\r\n      id: v4()\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <React.Fragment>\r\n        <form onSubmit={handleEditKegFormSubmission}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name:</label>\r\n            <input\r\n            className=\"form-control\"\r\n              type='text'\r\n              name='name'\r\n              defaultValue={props.keg.name} required /><br/>\r\n            <label htmlFor=\"brand\">Brand:</label>\r\n            <input\r\n            className=\"form-control\"\r\n              type='text'\r\n              name='brand'\r\n              defaultValue={props.keg.brand} required /><br/>\r\n            <label htmlFor=\"price\">Price:</label>\r\n            <input\r\n            className=\"form-control\"\r\n              type=\"number\"\r\n              name='price'\r\n              defaultValue={props.keg.price} min=\"0.01\" step=\"0.01\" required /><br/>\r\n            <label htmlFor=\"alcoholContent\">Alcohol Content:</label>\r\n            <input\r\n            className=\"form-control\"\r\n              type=\"number\"\r\n              name='alcoholContent'\r\n              defaultValue={props.keg.alcoholContent} min=\"0.01\" step=\"0.01\" required/><br/>\r\n            <label htmlFor=\"quantity\">Quantity:</label>\r\n            <input\r\n            className=\"form-control\"\r\n              type=\"number\"\r\n              name='quantity'\r\n              defaultValue={props.keg.quantity} min=\"1\" step=\"1\" max=\"124\" required/><br/>\r\n          <button className=\"btn btn-outline-danger btn-block\" type='submit'>Update Keg</button>\r\n        </div>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nEditKegForm.propTypes = {\r\n  onEditProduct: PropTypes.func,\r\n  keg: PropTypes.object\r\n};\r\n\r\nexport default EditKegForm;","import React from 'react';\r\nimport TapList from \"./TapList.js\"\r\nimport NewKegForm from \"./NewKegForm.js\"\r\nimport KegDetail from \"./KegDetails.js\"\r\nimport EditKegForm from \"./EditKegForm.js\"\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport * as a from './../actions/index'\r\n\r\n\r\nclass TapControl extends React.Component {\r\n  constructor(props) {\r\n    super(props);    \r\n  }\r\n\r\n  handleClickForm = () => {\r\n    const { dispatch } = this.props;    \r\n    if (this.props.selectedKeg != null){\r\n      dispatch(a.setFormFalse())\r\n      dispatch(a.setKegNull())\r\n      dispatch(a.editingSetFalse())      \r\n    } else {      \r\n      dispatch(a.toggleForm())      \r\n    }\r\n  }\r\n\r\n  handleAddingNewKegToList = (newKeg) => {\r\n    const { dispatch } = this.props;\r\n    dispatch(a.addKeg(newKeg))\r\n    dispatch(a.toggleForm())    \r\n  }\r\n\r\n  handleChangingSelectedKeg = (id) => {  \r\n    const { dispatch } = this.props;\r\n    dispatch(a.selectedKeg(id,this.props.masterTapList))     \r\n  }\r\n  \r\n  handlePourPint = (id) => {\r\n    const { dispatch } = this.props;\r\n    dispatch(a.pourPint(id));\r\n    this.forceUpdate();        \r\n  }\r\n\r\n  handleEditClick = () => {   \r\n    const { dispatch } = this.props;\r\n    dispatch(a.editing())     \r\n  }\r\n\r\n  handleEditingKegInList = (kegToEdit) => {    \r\n    const { dispatch } = this.props;\r\n    dispatch(a.editKeg(kegToEdit,this.props.selectedKeg))\r\n    dispatch(a.setKegNull())\r\n    dispatch(a.editingSetFalse())  \r\n  }\r\n\r\n  handleDeletingKeg = (id) => {\r\n    const { dispatch } = this.props;\r\n    dispatch(a.deleteKeg(id))\r\n    dispatch(a.setKegNull())    \r\n  }\r\n\r\n  render() {\r\n    let currentVisibleState = null;\r\n    let buttonText = null;    \r\n    if (this.props.editing){\r\n      currentVisibleState = <EditKegForm keg = {this.props.selectedKeg} onEditProduct = {this.handleEditingKegInList}/>\r\n      buttonText = \"Return to Tap List\";\r\n    } else if (this.props.selectedKeg != null) {\r\n        currentVisibleState = <KegDetail \r\n        keg = {this.props.selectedKeg} \r\n        onClickingDelete = {this.handleDeletingKeg}\r\n        onClickingEdit = {this.handleEditClick}/>\r\n        buttonText = \"Return to Tap List\";\r\n    } else if (this.props.formVisibleOnPage) {\r\n        currentVisibleState = <NewKegForm onNewKegCreation={this.handleAddingNewKegToList} />;\r\n        buttonText = \"Return to Tap List\"\r\n    } else {     \r\n        currentVisibleState = <TapList \r\n        availableKegs={this.props.masterTapList}\r\n        onKegSelection={this.handleChangingSelectedKeg}\r\n        onPourPint={this.handlePourPint}/>      \r\n        buttonText = \"Add New Keg\"\r\n      }\r\n\r\n    return (      \r\n      <div className=\"container mainBox\">\r\n        {currentVisibleState}\r\n        <br/>\r\n        <button className=\"arrow btn btn-outline-info btn-block\" onClick={this.handleClickForm}>{buttonText}</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTapControl.propTypes = {\r\n  masterTapList: PropTypes.array,\r\n  formVisibleOnPage: PropTypes.bool,\r\n  selectedKeg: PropTypes.object,\r\n  editing: PropTypes.bool\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    masterTapList: state.masterTapList,\r\n    formVisibleOnPage: state.formVisibleOnPage,\r\n    selectedKeg: state.selectedKeg,\r\n    editing: state.editing\r\n  }\r\n}\r\n\r\nTapControl = connect(mapStateToProps)(TapControl);\r\n\r\nexport default TapControl;","import * as c from './ActionTypes';\r\n\r\nexport const addKeg = (newKeg) => {\r\n  const { name, brand, price, alcoholContent, quantity, id } = newKeg;\r\n  return {    \r\n    type: c.ADD_KEG,\r\n    name: name,\r\n    brand: brand,\r\n    price: price,\r\n    alcoholContent: alcoholContent,\r\n    quantity: quantity,\r\n    id: id  \r\n  };\r\n};\r\n\r\nexport const deleteKeg = (id) => {\r\n  return {\r\n    type: c.DELETE_KEG,\r\n    id: id\r\n  };\r\n};\r\n\r\nexport const pourPint = (id) => {\r\n  return {\r\n    type: c.POUR_PINT,\r\n    id: id\r\n  };\r\n};\r\n\r\nexport const toggleForm = () => {\r\n  return {\r\n    type: c.TOGGLE_FORM\r\n  };\r\n};\r\n\r\nexport const setFormFalse = () => {\r\n  return {\r\n    type: c.SET_FORM_FALSE\r\n  };\r\n};\r\n\r\nexport const selectedKeg = (id,tapList) => {\r\n  return {\r\n    type: c.SELECTED_KEG,\r\n    id: id,\r\n    tapList: tapList\r\n  };\r\n};\r\n\r\nexport const setKegNull = () => {\r\n  return {\r\n    type: c.SET_KEG_NULL    \r\n  };\r\n};\r\n\r\nexport const editing = () => {\r\n  return {\r\n    type: c.EDITING\r\n  }\r\n}\r\n\r\nexport const editingSetFalse = () => {\r\n  return {\r\n    type: c.EDITING_SET_FALSE\r\n  }\r\n}\r\n\r\nexport const editKeg = (kegToEdit,selectedKeg) => {\r\n  return {\r\n    type: c.EDIT_KEG,\r\n    keg: kegToEdit,\r\n    selectedKeg: selectedKeg\r\n  }\r\n}","export const ADD_KEG = 'ADD_KEG';\r\nexport const DELETE_KEG = 'DELETE_KEG';\r\nexport const POUR_PINT = 'POUR_PINT';\r\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\r\nexport const SET_FORM_FALSE = 'SET_FORM_FALSE';\r\nexport const SELECTED_KEG = 'SELECTED KEG';\r\nexport const SET_KEG_NULL = 'SET_KEG_NULL';\r\nexport const EDITING = 'EDITING';\r\nexport const EDITING_SET_FALSE = 'EDITING_SET_FALSE'\r\nexport const EDIT_KEG = 'EDIT_KEG'","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport TapControl from \"./TapControl\";\r\n\r\n\r\nfunction App(){\r\n  return ( \r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <div className=\"row flex-nowrap\">\r\n          <div className=\"col-2\">\r\n            <img className=\"sideImg\" src={require('./img/VikingMammen2.png')} alt=\"MammenLeft\" />            \r\n          </div>\r\n          <div className=\"col-lg-8\">\r\n            <Header />\r\n            <TapControl />          \r\n          </div>\r\n          <div className=\"col-2\">\r\n          <img className=\"sideImg\" src={require('./img/VikingMammen1.png')} alt=\"MammenRight\" />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import editingReducer from './editing-reducer';\r\nimport formVisibleReducer from './form-visible-reducer';\r\nimport selectedKegReducer from './selected-keg-reducer';\r\nimport tapListReducer from './tap-list-reducer';\r\nimport { combineReducers } from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n  masterTapList: tapListReducer,\r\n  formVisibleOnPage: formVisibleReducer,\r\n  selectedKeg: selectedKegReducer,\r\n  editing: editingReducer\r\n})\r\n\r\nexport default rootReducer;","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = [], action) => { \r\n  switch (action.type) {\r\n  case c.ADD_KEG:\r\n    const { name, brand, price, alcoholContent, quantity, id } = action;\r\n    return state.concat({      \r\n      name: name,\r\n      brand: brand,\r\n      price: price,\r\n      alcoholContent: alcoholContent,\r\n      quantity: quantity,\r\n      id: id  \r\n    })   \r\n  case c.DELETE_KEG:\r\n    const newState = state.filter(Tap => Tap.id !== action.id);    \r\n    return newState;\r\n  case c.POUR_PINT:\r\n    const newState2 = state;\r\n    for (const keg of newState2) {      \r\n      if (keg.id === action.id) {\r\n        if (keg.quantity > 0) {\r\n          keg.quantity -= 1;\r\n          keg.quantity = keg.quantity.toString();\r\n        } else if (keg.quantity <= 0) {\r\n          alert(\"YYYAARRRGGG! Thy Keg is Empty!\")\r\n        }\r\n        break;\r\n      }\r\n    }\r\n    return newState2\r\n  case c.EDIT_KEG:\r\n    const editedMasterTapList = state.filter(Keg => Keg.id !== action.selectedKeg.id).concat(action.keg);\r\n    return editedMasterTapList\r\n  default:\r\n    return state;\r\n  }\r\n}","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = false, action) => {  \r\n  switch (action.type) {\r\n    case c.TOGGLE_FORM:\r\n      return !state;\r\n    case c.SET_FORM_FALSE:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = null, action) => {  \r\n  switch (action.type) {\r\n  case c.SELECTED_KEG:\r\n    const newSelectedKeg = action.tapList.filter(keg => keg.id === action.id)[0];\r\n    return newSelectedKeg\r\n  case 'SET_KEG_NULL':    \r\n    state = null;\r\n    return state;\r\n  default:\r\n    return state;\r\n  }    \r\n}","import * as c from './../actions/ActionTypes';\r\n\r\nexport default (state = false, action) => {\r\n  switch (action.type) {\r\n  case c.EDITING:\r\n    return !state;\r\n  case c.EDITING_SET_FALSE:\r\n    return false;\r\n  default:\r\n    return state;\r\n  }\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport rootReducer from './reducers/index';\r\n\r\n\r\nconst store = createStore(rootReducer, \r\n  {masterTapList: [\r\n    {name: \"Viking Mead\", brand: \"Skull Crusher\", price: \"4.50\", alcoholContent: \"8.5\", quantity: \"10\", id:\"10001\" },\r\n    {name: \"Dansk Blod\", brand: \"Einstök\", price: \"5.50\", alcoholContent: \"6.5\", quantity: \"0\", id:\"10002\" },\r\n    {name: \"Savage Pilsner\", brand: \"Ragnar\", price: \"3.50\", alcoholContent: \"3.5\", quantity: \"124\", id:\"10003\" }]\r\n  }\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();"],"sourceRoot":""}